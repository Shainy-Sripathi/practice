	abstract		Declare an abstract method or an abstract class
	assert		Test a boolean condition at runtime
	boolean		Declare a boolean variable or a method that returns a boolean value
	break		Exit a loop or switch statement
	byte		Declare a byte variable or a method that returns a byte value
	case		Specify a branch of code in a switch statement
	catch		Handle exceptions thrown by a try block
	char		Declare a char variable or a method that returns a char value
	class		Declare a class
	const		Declare a constant field (no longer used in Java)
	continue		Skip the rest of the current iteration of a loop
	default		Specify a branch of code to be executed if no case matches in a switch statement
	do		Create a do-while loop
	double		Declare a double variable or a method that returns a double value
	else		Specify a branch of code to be executed if the condition is false in an if statement
	enum		Declare an enumeration
	extends		Specify that a class or an interface is a subclass or a subinterface of another class or interface
	final		Declare a final variable or a final class or method
	finally		Specify a block of code that is always executed after a try block, whether an exception is thrown or not
	float		Declare a float variable or a method that returns a float value
	for		Create a for loop
	goto		Transfer control to a labeled statement (no longer used in Java)
	if		Specify a branch of code to be executed if a condition is true
	implements	Specify that a class or an interface is implementing another interface
	import		Import a package or a class
	instanceof		Test whether an object is an instance of a class or an interface
	int		Declare an int variable or a method that returns an int value
	interface		Declare an interface
	long		Declare a long variable or a method that returns a long value
	native		Declare a native method (a method implemented in a language other than Java)
	new		Create an instance of a class or an array
	package		Declare a package
	private		Declare a private field or a private method
	protected		Declare a protected field or a protected method
	public		Declare a public field or a public method
	return		Return a value from a method
	short		Declare a short variable or a method that returns a short value
	static		Declare a static field or a static method
	strictfp		Specify that a method or a class should be executed in strict floating-point mode
	super		Refer to the superclass of a class
	switch		Create a switch statement
	synchronized	Specify that a method can be accessed by only one thread at a time
	this		Refer to the current object
	throw		Throw an exception
	throws		Specify that a method throws an exception
	transient		Declare a transient field (a field that is not serialized)
	try		Create a try block
	void		Declare a method that does not return a value
	volatile		Declare a volatile field (a field that can be modified by multiple threads)
	while		Create a while loop
	true		A boolean literal representing true
	false		A boolean literal representing false
	null		A null literal representing a null reference

